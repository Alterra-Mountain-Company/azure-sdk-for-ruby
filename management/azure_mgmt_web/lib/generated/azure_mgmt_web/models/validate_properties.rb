# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::ARM::Web
  module Models
    #
    # Site properties used for validation
    #
    class ValidateProperties

      include MsRestAzure

      # @return [String] ARM resource id of an app service plan that would host
      # the web app
      attr_accessor :server_farm_id

      # @return [String] Name of the target SKU for the server farm
      attr_accessor :sku_name

      # @return [Integer] Target capacity of the server farm (number of VM's)
      attr_accessor :capacity

      # @return [String] Name of app service environment where site or server
      # farm should be created
      attr_accessor :hosting_environment


      #
      # Mapper for ValidateProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'ValidateProperties',
          type: {
            name: 'Composite',
            class_name: 'ValidateProperties',
            model_properties: {
              server_farm_id: {
                required: false,
                serialized_name: 'serverFarmId',
                type: {
                  name: 'String'
                }
              },
              sku_name: {
                required: false,
                serialized_name: 'skuName',
                type: {
                  name: 'String'
                }
              },
              capacity: {
                required: false,
                serialized_name: 'capacity',
                type: {
                  name: 'Number'
                }
              },
              hosting_environment: {
                required: false,
                serialized_name: 'hostingEnvironment',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
