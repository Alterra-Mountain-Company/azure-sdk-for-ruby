# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::CognitiveServices::Mgmt::V2017_04_18
  module Models
    #
    # The api properties for special APIs.
    #
    class CognitiveServicesAccountApiProperties

      include MsRestAzure

      # @return [String] (QnAMaker Only) The runtime endpoint of QnAMaker.
      attr_accessor :qna_runtime_endpoint

      # @return [Boolean] (Bing Search Only) The flag to enable statistics of
      # Bing Search.
      attr_accessor :statistics_enabled

      # @return [String] (Personalization Only) The flag to enable statistics
      # of Bing Search.
      attr_accessor :event_hub_connection_string

      # @return [String] (Personalization Only) The storage account connection
      # string.
      attr_accessor :storage_account_connection_string

      # @return [String] (Metrics Advisor Only) The Azure AD Client Id
      # (Application Id).
      attr_accessor :aad_client_id

      # @return [String] (Metrics Advisor Only) The Azure AD Tenant Id.
      attr_accessor :aad_tenant_id

      # @return [String] (Metrics Advisor Only) The super user of Metrics
      # Advisor.
      attr_accessor :super_user

      # @return [String] (Metrics Advisor Only) The website name of Metrics
      # Advisor.
      attr_accessor :website_name


      #
      # Mapper for CognitiveServicesAccountApiProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'CognitiveServicesAccountApiProperties',
          type: {
            name: 'Composite',
            class_name: 'CognitiveServicesAccountApiProperties',
            model_properties: {
              qna_runtime_endpoint: {
                client_side_validation: true,
                required: false,
                serialized_name: 'qnaRuntimeEndpoint',
                type: {
                  name: 'String'
                }
              },
              statistics_enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'statisticsEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              event_hub_connection_string: {
                client_side_validation: true,
                required: false,
                serialized_name: 'eventHubConnectionString',
                constraints: {
                  MaxLength: 1000,
                  Pattern: '^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$'
                },
                type: {
                  name: 'String'
                }
              },
              storage_account_connection_string: {
                client_side_validation: true,
                required: false,
                serialized_name: 'storageAccountConnectionString',
                constraints: {
                  MaxLength: 1000,
                  Pattern: '^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$'
                },
                type: {
                  name: 'String'
                }
              },
              aad_client_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'aadClientId',
                constraints: {
                  MaxLength: 500
                },
                type: {
                  name: 'String'
                }
              },
              aad_tenant_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'aadTenantId',
                constraints: {
                  MaxLength: 500
                },
                type: {
                  name: 'String'
                }
              },
              super_user: {
                client_side_validation: true,
                required: false,
                serialized_name: 'superUser',
                constraints: {
                  MaxLength: 500
                },
                type: {
                  name: 'String'
                }
              },
              website_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'websiteName',
                constraints: {
                  MaxLength: 500
                },
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
