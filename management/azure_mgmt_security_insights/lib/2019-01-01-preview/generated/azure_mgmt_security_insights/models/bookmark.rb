# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Represents a bookmark in Azure Security Insights.
    #
    class Bookmark < ResourceWithEtag

      include MsRestAzure

      # @return [DateTime] The time the bookmark was created
      attr_accessor :created

      # @return [UserInfo] Describes a user that created the bookmark
      attr_accessor :created_by

      # @return [String] The display name of the bookmark
      attr_accessor :display_name

      # @return [Array<String>] List of labels relevant to this bookmark
      attr_accessor :labels

      # @return [String] The notes of the bookmark
      attr_accessor :notes

      # @return [String] The query of the bookmark.
      attr_accessor :query

      # @return [String] The query result of the bookmark.
      attr_accessor :query_result

      # @return [DateTime] The last time the bookmark was updated
      attr_accessor :updated

      # @return [UserInfo] Describes a user that updated the bookmark
      attr_accessor :updated_by

      # @return [IncidentInfo] Describes an incident that relates to bookmark
      attr_accessor :incident_info


      #
      # Mapper for Bookmark class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Bookmark',
          type: {
            name: 'Composite',
            class_name: 'Bookmark',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              created: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.created',
                type: {
                  name: 'DateTime'
                }
              },
              created_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.createdBy',
                type: {
                  name: 'Composite',
                  class_name: 'UserInfo'
                }
              },
              display_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              labels: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.labels',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              notes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.notes',
                type: {
                  name: 'String'
                }
              },
              query: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.query',
                type: {
                  name: 'String'
                }
              },
              query_result: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.queryResult',
                type: {
                  name: 'String'
                }
              },
              updated: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.updated',
                type: {
                  name: 'DateTime'
                }
              },
              updated_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.updatedBy',
                type: {
                  name: 'Composite',
                  class_name: 'UserInfo'
                }
              },
              incident_info: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.incidentInfo',
                type: {
                  name: 'Composite',
                  class_name: 'IncidentInfo'
                }
              }
            }
          }
        }
      end
    end
  end
end
