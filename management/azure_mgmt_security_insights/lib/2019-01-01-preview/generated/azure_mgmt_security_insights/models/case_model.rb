# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Represents a case in Azure Security Insights.
    #
    class CaseModel < ResourceWithEtag

      include MsRestAzure

      # @return [Integer] a sequential number
      attr_accessor :case_number

      # @return [CloseReason] The reason the case was closed. Possible values
      # include: 'Resolved', 'Dismissed', 'TruePositive', 'FalsePositive',
      # 'Other'
      attr_accessor :close_reason

      # @return [String] the case close reason details
      attr_accessor :closed_reason_text

      # @return [DateTime] The time the case was created
      attr_accessor :created_time_utc

      # @return [String] The description of the case
      attr_accessor :description

      # @return [DateTime] The end time of the case
      attr_accessor :end_time_utc

      # @return [Array<String>] List of labels relevant to this case
      attr_accessor :labels

      # @return [String] the last comment in the case
      attr_accessor :last_comment

      # @return [DateTime] The last time the case was updated
      attr_accessor :last_updated_time_utc

      # @return [UserInfo] Describes a user that the case is assigned to
      attr_accessor :owner

      # @return [Array<String>] List of related alert identifiers
      attr_accessor :related_alert_ids

      # @return [Array<AttackTactic>] The tactics associated with case
      attr_accessor :tactics

      # @return [CaseSeverity] The severity of the case. Possible values
      # include: 'Critical', 'High', 'Medium', 'Low', 'Informational'
      attr_accessor :severity

      # @return [DateTime] The start time of the case
      attr_accessor :start_time_utc

      # @return [CaseStatus] The status of the case. Possible values include:
      # 'Draft', 'New', 'InProgress', 'Closed'
      attr_accessor :status

      # @return [String] The title of the case
      attr_accessor :title

      # @return [Integer] the number of total comments in the case
      attr_accessor :total_comments


      #
      # Mapper for CaseModel class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Case',
          type: {
            name: 'Composite',
            class_name: 'CaseModel',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              case_number: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.caseNumber',
                type: {
                  name: 'Number'
                }
              },
              close_reason: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.closeReason',
                type: {
                  name: 'String'
                }
              },
              closed_reason_text: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.closedReasonText',
                type: {
                  name: 'String'
                }
              },
              created_time_utc: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.createdTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              end_time_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.endTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              labels: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.labels',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              last_comment: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastComment',
                type: {
                  name: 'String'
                }
              },
              last_updated_time_utc: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastUpdatedTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              owner: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.owner',
                type: {
                  name: 'Composite',
                  class_name: 'UserInfo'
                }
              },
              related_alert_ids: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.relatedAlertIds',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              tactics: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.tactics',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AttackTacticElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              severity: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.severity',
                type: {
                  name: 'String'
                }
              },
              start_time_utc: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.startTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              status: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              title: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.title',
                type: {
                  name: 'String'
                }
              },
              total_comments: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.totalComments',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
