# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Data connector.
    #
    class DataConnector

      include MsRestAzure

      @@discriminatorMap = Hash.new
      @@discriminatorMap["AzureActiveDirectory"] = "AADDataConnector"
      @@discriminatorMap["AzureAdvancedThreatProtection"] = "AATPDataConnector"
      @@discriminatorMap["AzureSecurityCenter"] = "ASCDataConnector"
      @@discriminatorMap["AmazonWebServicesCloudTrail"] = "AwsCloudTrailDataConnector"
      @@discriminatorMap["MicrosoftCloudAppSecurity"] = "MCASDataConnector"
      @@discriminatorMap["MicrosoftDefenderAdvancedThreatProtection"] = "MDATPDataConnector"
      @@discriminatorMap["OfficeATP"] = "OfficeATPDataConnector"
      @@discriminatorMap["Office365"] = "OfficeDataConnector"
      @@discriminatorMap["ThreatIntelligence"] = "TIDataConnector"
      @@discriminatorMap["ThreatIntelligenceTaxii"] = "TiTaxiiDataConnector"

      def initialize
        @kind = "DataConnector"
      end

      attr_accessor :kind

      # @return [String] Azure resource Id
      attr_accessor :id

      # @return [String] Azure resource name
      attr_accessor :name

      # @return [String] Azure resource type
      attr_accessor :type

      # @return [String] Etag of the azure resource
      attr_accessor :etag


      #
      # Mapper for DataConnector class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'DataConnector',
          type: {
            name: 'Composite',
            polymorphic_discriminator: 'kind',
            uber_parent: 'DataConnector',
            class_name: 'DataConnector',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
