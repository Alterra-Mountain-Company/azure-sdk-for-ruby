# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Specific entity query.
    #
    class EntityQuery < Resource

      include MsRestAzure

      # @return [Array<String>] List of the data sources that are required to
      # run the query
      attr_accessor :data_sources

      # @return [String] The query display name
      attr_accessor :display_name

      # @return [EntityType] The type of the query's source entity. Possible
      # values include: 'Account', 'Host', 'File', 'AzureResource',
      # 'CloudApplication', 'DNS', 'FileHash', 'IP', 'Malware', 'Process',
      # 'RegistryKey', 'RegistryValue', 'SecurityGroup', 'URL', 'IoTDevice',
      # 'SecurityAlert', 'HuntingBookmark'
      attr_accessor :input_entity_type

      # @return [Array<String>] List of the fields of the source entity that
      # are required to run the query
      attr_accessor :input_fields

      # @return [Array<EntityType>] List of the desired output types to be
      # constructed from the result
      attr_accessor :output_entity_types

      # @return [String] The template query string to be parsed and formatted
      attr_accessor :query_template


      #
      # Mapper for EntityQuery class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'EntityQuery',
          type: {
            name: 'Composite',
            class_name: 'EntityQuery',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              data_sources: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.dataSources',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              input_entity_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.inputEntityType',
                type: {
                  name: 'String'
                }
              },
              input_fields: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.inputFields',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              output_entity_types: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.outputEntityTypes',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'EntityTypeElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              query_template: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.queryTemplate',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
