# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Represents a host entity.
    #
    class HostEntity < Entity

      include MsRestAzure


      def initialize
        @kind = "Host"
      end

      attr_accessor :kind

      # @return A bag of custom fields that should be part of the entity and
      # will be presented to the user.
      attr_accessor :additional_data

      # @return [String] The graph item display name which is a short humanly
      # readable description of the graph item instance. This property is
      # optional and might be system generated.
      attr_accessor :friendly_name

      # @return [String] The azure resource id of the VM.
      attr_accessor :azure_id

      # @return [String] The DNS domain that this host belongs to. Should
      # contain the compete DNS suffix for the domain
      attr_accessor :dns_domain

      # @return [String] The hostname without the domain suffix.
      attr_accessor :host_name

      # @return [Boolean] Determines whether this host belongs to a domain.
      attr_accessor :is_domain_joined

      # @return [String] The host name (pre-windows2000).
      attr_accessor :net_bios_name

      # @return [String] The NT domain that this host belongs to.
      attr_accessor :nt_domain

      # @return [String] The OMS agent id, if the host has OMS agent installed.
      attr_accessor :oms_agent_id

      # @return [OSFamily] The operating system type. Possible values include:
      # 'Linux', 'Windows', 'Android', 'IOS'
      attr_accessor :os_family

      # @return [String] A free text representation of the operating system.
      # This field is meant to hold specific versions the are more fine grained
      # than OSFamily or future values not supported by OSFamily enumeration
      attr_accessor :os_version


      #
      # Mapper for HostEntity class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Host',
          type: {
            name: 'Composite',
            class_name: 'HostEntity',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              additional_data: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.additionalData',
                type: {
                  name: 'Dictionary',
                  value: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              friendly_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.friendlyName',
                type: {
                  name: 'String'
                }
              },
              azure_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.azureID',
                type: {
                  name: 'String'
                }
              },
              dns_domain: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.dnsDomain',
                type: {
                  name: 'String'
                }
              },
              host_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.hostName',
                type: {
                  name: 'String'
                }
              },
              is_domain_joined: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.isDomainJoined',
                type: {
                  name: 'Boolean'
                }
              },
              net_bios_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.netBiosName',
                type: {
                  name: 'String'
                }
              },
              nt_domain: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.ntDomain',
                type: {
                  name: 'String'
                }
              },
              oms_agent_id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.omsAgentID',
                type: {
                  name: 'String'
                }
              },
              os_family: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.osFamily',
                type: {
                  name: 'Enum',
                  module: 'OSFamily'
                }
              },
              os_version: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.osVersion',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
