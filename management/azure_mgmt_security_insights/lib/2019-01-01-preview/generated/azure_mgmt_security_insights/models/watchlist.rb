# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2019_01_01_preview
  module Models
    #
    # Represents a Watchlist in Azure Security Insights.
    #
    class Watchlist < ResourceWithEtag

      include MsRestAzure

      # @return [DateTime] The time the watchlist was created
      attr_accessor :created_time_utc

      # @return [UserInfo] Describes a user that created the watchlist
      attr_accessor :created_by

      # @return [String] The display name of the watchlist
      attr_accessor :display_name

      # @return [String] The type of the watchlist
      attr_accessor :watchlist_type

      # @return [Source] The source of the watchlist. Possible values include:
      # 'Local file', 'Remote storage'
      attr_accessor :source

      # @return [String] The provider of the watchlist
      attr_accessor :provider

      # @return [String] A description of the watchlist
      attr_accessor :description

      # @return [String] The tenantId where the watchlist belongs to.
      attr_accessor :tenant_id

      # @return [String] The workspaceId where the watchlist belongs to.
      attr_accessor :workspace_id

      # @return [Array<String>] List of labels relevant to this watchlist
      attr_accessor :labels

      # @return [String] The notes of the watchlist
      attr_accessor :notes

      # @return [DateTime] The last time the watchlist was updated
      attr_accessor :last_updated_time_utc

      # @return [UserInfo] Describes a user that updated the watchlist
      attr_accessor :updated_by

      # @return [Duration] The default duration of a watchlist (in ISO 8601
      # duration format)
      attr_accessor :default_duration

      # @return [Array<WatchlistItem>] List of watchlist items.
      attr_accessor :watchlist_items


      #
      # Mapper for Watchlist class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Watchlist',
          type: {
            name: 'Composite',
            class_name: 'Watchlist',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              created_time_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.createdTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              created_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.createdBy',
                type: {
                  name: 'Composite',
                  class_name: 'UserInfo'
                }
              },
              display_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              watchlist_type: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.watchlistType',
                type: {
                  name: 'String'
                }
              },
              source: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.source',
                type: {
                  name: 'String'
                }
              },
              provider: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.provider',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              tenant_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.tenantId',
                type: {
                  name: 'String'
                }
              },
              workspace_id: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.workspaceId',
                type: {
                  name: 'String'
                }
              },
              labels: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.labels',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              notes: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.notes',
                type: {
                  name: 'String'
                }
              },
              last_updated_time_utc: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.lastUpdatedTimeUtc',
                type: {
                  name: 'DateTime'
                }
              },
              updated_by: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.updatedBy',
                type: {
                  name: 'Composite',
                  class_name: 'UserInfo'
                }
              },
              default_duration: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.defaultDuration',
                type: {
                  name: 'TimeSpan'
                }
              },
              watchlist_items: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.watchlistItems',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'WatchlistItemElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'WatchlistItem'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
