# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2020_01_01
  module Models
    #
    # Represents settings for User and Entity Behavior Analytics enablement.
    #
    class UebaSettings < Settings

      include MsRestAzure


      def initialize
        @kind = "UebaSettings"
      end

      attr_accessor :kind

      # @return [LicenseStatus] Determines whether the tenant has ATP (Advanced
      # Threat Protection) license. Possible values include: 'Enabled',
      # 'Disabled'
      attr_accessor :atp_license_status

      # @return [Boolean] Determines whether User and Entity Behavior Analytics
      # is enabled for this workspace.
      attr_accessor :is_enabled

      # @return [StatusInMcas] Determines whether User and Entity Behavior
      # Analytics is enabled from MCAS (Microsoft Cloud App Security). Possible
      # values include: 'Enabled', 'Disabled'
      attr_accessor :status_in_mcas


      #
      # Mapper for UebaSettings class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'UebaSettings',
          type: {
            name: 'Composite',
            class_name: 'UebaSettings',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              atp_license_status: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.atpLicenseStatus',
                type: {
                  name: 'String'
                }
              },
              is_enabled: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.isEnabled',
                type: {
                  name: 'Boolean'
                }
              },
              status_in_mcas: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.statusInMcas',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
