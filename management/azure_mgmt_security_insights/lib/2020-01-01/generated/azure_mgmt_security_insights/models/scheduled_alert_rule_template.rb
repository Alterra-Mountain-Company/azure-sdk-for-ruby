# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2020_01_01
  module Models
    #
    # Represents scheduled alert rule template.
    #
    class ScheduledAlertRuleTemplate < AlertRuleTemplate

      include MsRestAzure


      def initialize
        @kind = "Scheduled"
      end

      attr_accessor :kind

      # @return [Integer] the number of alert rules that were created by this
      # template
      attr_accessor :alert_rules_created_by_template_count

      # @return [DateTime] The time that this alert rule template has been
      # added.
      attr_accessor :created_date_utc

      # @return [String] The description of the alert rule template.
      attr_accessor :description

      # @return [String] The display name for alert rule template.
      attr_accessor :display_name

      # @return [Array<AlertRuleTemplateDataSource>] The required data
      # connectors for this template
      attr_accessor :required_data_connectors

      # @return [TemplateStatus] The alert rule template status. Possible
      # values include: 'Installed', 'Available', 'NotAvailable'
      attr_accessor :status

      # @return [String] The query that creates alerts for this rule.
      attr_accessor :query

      # @return [Duration] The frequency (in ISO 8601 duration format) for this
      # alert rule to run.
      attr_accessor :query_frequency

      # @return [Duration] The period (in ISO 8601 duration format) that this
      # alert rule looks at.
      attr_accessor :query_period

      # @return [AlertSeverity] The severity for alerts created by this alert
      # rule. Possible values include: 'High', 'Medium', 'Low', 'Informational'
      attr_accessor :severity

      # @return [TriggerOperator] The operation against the threshold that
      # triggers alert rule. Possible values include: 'GreaterThan',
      # 'LessThan', 'Equal', 'NotEqual'
      attr_accessor :trigger_operator

      # @return [Integer] The threshold triggers this alert rule.
      attr_accessor :trigger_threshold

      # @return [Array<AttackTactic>] The tactics of the alert rule template
      attr_accessor :tactics


      #
      # Mapper for ScheduledAlertRuleTemplate class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Scheduled',
          type: {
            name: 'Composite',
            class_name: 'ScheduledAlertRuleTemplate',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              alert_rules_created_by_template_count: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.alertRulesCreatedByTemplateCount',
                type: {
                  name: 'Number'
                }
              },
              created_date_utc: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.createdDateUTC',
                type: {
                  name: 'DateTime'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              required_data_connectors: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.requiredDataConnectors',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AlertRuleTemplateDataSourceElementType',
                      type: {
                        name: 'Composite',
                        class_name: 'AlertRuleTemplateDataSource'
                      }
                  }
                }
              },
              status: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.status',
                type: {
                  name: 'String'
                }
              },
              query: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.query',
                type: {
                  name: 'String'
                }
              },
              query_frequency: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.queryFrequency',
                type: {
                  name: 'TimeSpan'
                }
              },
              query_period: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.queryPeriod',
                type: {
                  name: 'TimeSpan'
                }
              },
              severity: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.severity',
                type: {
                  name: 'String'
                }
              },
              trigger_operator: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.triggerOperator',
                type: {
                  name: 'Enum',
                  module: 'TriggerOperator'
                }
              },
              trigger_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.triggerThreshold',
                type: {
                  name: 'Number'
                }
              },
              tactics: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.tactics',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AttackTacticElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
