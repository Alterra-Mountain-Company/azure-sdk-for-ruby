# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2020_01_01
  module Models
    #
    # Schedule alert rule template property bag.
    #
    class ScheduledAlertRuleCommonProperties

      include MsRestAzure

      # @return [String] The query that creates alerts for this rule.
      attr_accessor :query

      # @return [Duration] The frequency (in ISO 8601 duration format) for this
      # alert rule to run.
      attr_accessor :query_frequency

      # @return [Duration] The period (in ISO 8601 duration format) that this
      # alert rule looks at.
      attr_accessor :query_period

      # @return [AlertSeverity] The severity for alerts created by this alert
      # rule. Possible values include: 'High', 'Medium', 'Low', 'Informational'
      attr_accessor :severity

      # @return [TriggerOperator] The operation against the threshold that
      # triggers alert rule. Possible values include: 'GreaterThan',
      # 'LessThan', 'Equal', 'NotEqual'
      attr_accessor :trigger_operator

      # @return [Integer] The threshold triggers this alert rule.
      attr_accessor :trigger_threshold


      #
      # Mapper for ScheduledAlertRuleCommonProperties class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'ScheduledAlertRuleCommonProperties',
          type: {
            name: 'Composite',
            class_name: 'ScheduledAlertRuleCommonProperties',
            model_properties: {
              query: {
                client_side_validation: true,
                required: false,
                serialized_name: 'query',
                type: {
                  name: 'String'
                }
              },
              query_frequency: {
                client_side_validation: true,
                required: false,
                serialized_name: 'queryFrequency',
                type: {
                  name: 'TimeSpan'
                }
              },
              query_period: {
                client_side_validation: true,
                required: false,
                serialized_name: 'queryPeriod',
                type: {
                  name: 'TimeSpan'
                }
              },
              severity: {
                client_side_validation: true,
                required: false,
                serialized_name: 'severity',
                type: {
                  name: 'String'
                }
              },
              trigger_operator: {
                client_side_validation: true,
                required: false,
                serialized_name: 'triggerOperator',
                type: {
                  name: 'Enum',
                  module: 'TriggerOperator'
                }
              },
              trigger_threshold: {
                client_side_validation: true,
                required: false,
                serialized_name: 'triggerThreshold',
                type: {
                  name: 'Number'
                }
              }
            }
          }
        }
      end
    end
  end
end
