# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2020_01_01
  module Models
    #
    # Represents Fusion alert rule.
    #
    class FusionAlertRule < AlertRule

      include MsRestAzure


      def initialize
        @kind = "Fusion"
      end

      attr_accessor :kind

      # @return [String] The Name of the alert rule template used to create
      # this rule.
      attr_accessor :alert_rule_template_name

      # @return [String] The description of the alert rule.
      attr_accessor :description

      # @return [String] The display name for alerts created by this alert
      # rule.
      attr_accessor :display_name

      # @return [Boolean] Determines whether this alert rule is enabled or
      # disabled.
      attr_accessor :enabled

      # @return [DateTime] The last time that this alert has been modified.
      attr_accessor :last_modified_utc

      # @return [AlertSeverity] The severity for alerts created by this alert
      # rule. Possible values include: 'High', 'Medium', 'Low', 'Informational'
      attr_accessor :severity

      # @return [Array<AttackTactic>] The tactics of the alert rule
      attr_accessor :tactics


      #
      # Mapper for FusionAlertRule class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'Fusion',
          type: {
            name: 'Composite',
            class_name: 'FusionAlertRule',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              alert_rule_template_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.alertRuleTemplateName',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              enabled: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.enabled',
                type: {
                  name: 'Boolean'
                }
              },
              last_modified_utc: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedUtc',
                type: {
                  name: 'DateTime'
                }
              },
              severity: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.severity',
                type: {
                  name: 'String'
                }
              },
              tactics: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.tactics',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AttackTacticElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              }
            }
          }
        }
      end
    end
  end
end
