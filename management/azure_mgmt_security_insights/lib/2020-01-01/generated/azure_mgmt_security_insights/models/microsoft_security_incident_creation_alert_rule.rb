# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Azure::SecurityInsights::Mgmt::V2020_01_01
  module Models
    #
    # Represents MicrosoftSecurityIncidentCreation rule.
    #
    class MicrosoftSecurityIncidentCreationAlertRule < AlertRule

      include MsRestAzure


      def initialize
        @kind = "MicrosoftSecurityIncidentCreation"
      end

      attr_accessor :kind

      # @return [Array<String>] the alerts' displayNames on which the cases
      # will be generated
      attr_accessor :display_names_filter

      # @return [Array<String>] the alerts' displayNames on which the cases
      # will not be generated
      attr_accessor :display_names_exclude_filter

      # @return [MicrosoftSecurityProductName] The alerts' productName on which
      # the cases will be generated. Possible values include: 'Microsoft Cloud
      # App Security', 'Azure Security Center', 'Azure Advanced Threat
      # Protection', 'Azure Active Directory Identity Protection', 'Azure
      # Security Center for IoT'
      attr_accessor :product_filter

      # @return [Array<AlertSeverity>] the alerts' severities on which the
      # cases will be generated
      attr_accessor :severities_filter

      # @return [String] The Name of the alert rule template used to create
      # this rule.
      attr_accessor :alert_rule_template_name

      # @return [String] The description of the alert rule.
      attr_accessor :description

      # @return [String] The display name for alerts created by this alert
      # rule.
      attr_accessor :display_name

      # @return [Boolean] Determines whether this alert rule is enabled or
      # disabled.
      attr_accessor :enabled

      # @return [DateTime] The last time that this alert has been modified.
      attr_accessor :last_modified_utc


      #
      # Mapper for MicrosoftSecurityIncidentCreationAlertRule class as Ruby
      # Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          client_side_validation: true,
          required: false,
          serialized_name: 'MicrosoftSecurityIncidentCreation',
          type: {
            name: 'Composite',
            class_name: 'MicrosoftSecurityIncidentCreationAlertRule',
            model_properties: {
              id: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'id',
                type: {
                  name: 'String'
                }
              },
              name: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'name',
                type: {
                  name: 'String'
                }
              },
              type: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'type',
                type: {
                  name: 'String'
                }
              },
              etag: {
                client_side_validation: true,
                required: false,
                serialized_name: 'etag',
                type: {
                  name: 'String'
                }
              },
              kind: {
                client_side_validation: true,
                required: true,
                serialized_name: 'kind',
                type: {
                  name: 'String'
                }
              },
              display_names_filter: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.displayNamesFilter',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              display_names_exclude_filter: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.displayNamesExcludeFilter',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'StringElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              product_filter: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.productFilter',
                type: {
                  name: 'String'
                }
              },
              severities_filter: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.severitiesFilter',
                type: {
                  name: 'Sequence',
                  element: {
                      client_side_validation: true,
                      required: false,
                      serialized_name: 'AlertSeverityElementType',
                      type: {
                        name: 'String'
                      }
                  }
                }
              },
              alert_rule_template_name: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.alertRuleTemplateName',
                type: {
                  name: 'String'
                }
              },
              description: {
                client_side_validation: true,
                required: false,
                serialized_name: 'properties.description',
                type: {
                  name: 'String'
                }
              },
              display_name: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.displayName',
                type: {
                  name: 'String'
                }
              },
              enabled: {
                client_side_validation: true,
                required: true,
                serialized_name: 'properties.enabled',
                type: {
                  name: 'Boolean'
                }
              },
              last_modified_utc: {
                client_side_validation: true,
                required: false,
                read_only: true,
                serialized_name: 'properties.lastModifiedUtc',
                type: {
                  name: 'DateTime'
                }
              }
            }
          }
        }
      end
    end
  end
end
